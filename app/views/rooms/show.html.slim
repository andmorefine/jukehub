nav.navbar.navbar-dark.bg-primary
  div.container-fluid
    div.collapse.navbar-toggleable-xs
      a.navbar-brand = @room.screen_name
      form.form-inline.pull-xs-left
        input.form-control type="text" size='50%' placeholder="Search"
      ul.nav.navbar-nav.nav-flex-icons
        li.nav-item.avatar.active.dropdown
          img.img-circle src="#{current_user.accounts.first.image_url}" height='36px'

div#main.container-fluid
  br
  div.row
    div.col-xs-8
      iframe#video-viewer width="100%" height="400px" src="https://www.youtube.com/embed/ZWdMi2Cfp70" frameborder="0" allowfullscreen
      div.card.card-block
        div.row
          div.col-xs-2
            img.img-circle.img-responsive src="http://mdbootstrap.com/wp-content/uploads/2015/10/avatar-2.jpg"
          div.col-xs-8
            h4#now_playing_title.card-title
            p ここらへんにいいねとか
      div.card.card-block
        form.form-inline
          div.md-form.form-group
            input#comment value="#{@comment}" type='text' size='60%'
          div.md-form.form-group
            button v-on:click="comment" type="button" comment
        hr
        table
          tbody
            | <template v-for="comment in comments">
            |   <tr>
            |     <td>{{comment.user_id}}</td>
            |     <td>{{comment.body}}</td>
            |   </tr>
            | </template>
    div.col-xs-4
      div.card.card-block
        div.md-form
          input#url.form-control value="#{@q}" type='text' placeholder="https://www.youtube.com/watch?v=ZWdMi2Cfp70"
        div.md-form
          button.btn.btn-primary.btn-sm v-on:click="add" type="button" ↑
      div
        | <template v-for="queue in queues">
        |   <div class='card card-block'>
        |     <div class='row'>
        |       <div class='col-xs-2'>
        |         <img v-bind:src='queue.image_url' height='100%' width='100%'>
        |       </div>
        |       <div class='col-xs-10'>
        |         <h5 class='card-title'>{{queue.title}}</h4>
        |         <p class='pull-xs-right'>{{queue.duration}}秒</p>
        |       </div>
        |     </div>
        |   </div>
        | </template>

javascript:
  var v = new Vue({
    el: '#main',
    data: {
      queues: [],
      comments: [],
      now_playing: 0,
    },
    methods: {
      add: function (event) {
        var self = this;
        var url = $('#url').val();
        $.ajax({
          type: 'POST',
          url: '/api/rooms/1/queues',
          data: { url: url },
          success: function() {
            $('#url').val('');
            self.fetch_videos();
          }
        });
      },
      fetch_videos: function() {
        var self = this;
        $.ajax({
          type: 'GET',
          url: '/api/rooms/1/queues',
          success: function (data, status, request) {
            self.queues = [];
            for (var i = 0; i < data.length; i++) {
              self.queues.push(data[i]);
            }
          },
        }).error(function (data, status, request) {})
      },
      get_video: function(callback) {
        $.ajax({
          type: 'GET',
          url: '/api/rooms/1/queues/playing',
          success: function(res) {
            if (res) {
              $('#now_playing_title').text(res.video.title);
              $('#now_playing_user').text(res.user.email);
              callback(res.video.provider_video_id);
            } else {
              callback(false);
            }
          },
        })
      },
      play: function(video_id) {
        var url = 'https://www.youtube.com/embed/' + video_id;
        $('#video-viewer').attr('src', url + '?autoplay=1');
      },
      force_stop: function(e, a, b) {
        var self = this;
        $.ajax({
          type: 'DELETE',
          url: '/api/rooms/1/queues/' + e.target.id,
          success: function(res) {
            self.fetch_videos();
          }
        });
      },
      watch: function() {
        var self = this;
        this.get_video(function(video_id) {
          console.log(video_id)
          if (video_id && (self.now_playing != video_id)) {
            self.now_playing = video_id;
            self.play(video_id);
          }
          self.fetch_videos();
          self.fetch_comments();
          setTimeout(function() {
            self.watch();
          }, 5 * 1000);
        });
      },
      likes: function() {
        console.log('likes');
      },
      comment: function() {
        var self = this;
        var comment = $('#comment').val();
        $.ajax({
          type: 'POST',
          url: '/api/rooms/1/comments',
          data: { comment: comment },
          success: function() {
            $('#comment').val('');
            self.fetch_videos();
          }
        });
      },
      fetch_comments: function() {
        var self = this;
        $.ajax({
          type: 'GET',
          url: '/api/rooms/1/comments',
          success: function (data, status, request) {
            self.comments = [];
            for (var i = 0; i < data.length; i++) {
              self.comments.push(data[i]);
            }
          },
        });
      },
    }
  })
  v.watch();
